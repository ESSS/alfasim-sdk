digraph {

            nodesep = 0.7;
            node [
                peripheries="1",
                fillcolor="#FAAC2C"
                style="rounded, filled"
                color="#FAAC2C"
                fontcolor="#ffffff"
                shape="rectangular"
            ];
            edge [ color="#8699A3", fontcolor="#2c3e50" ];

            init [label="Initialize Simulation", shape=""]
            end [label="End of Simulation", shape=""]
            config [label="Solver Configuration"]
            solver [shape=point, width=0, peripheries="0"]

            time [
                    fixedsize=true,
                    label="Time Step",
                    width="1.0",
                    shape="circle",
                    ];

            hook_initialize_point [shape = point, width = 0, peripheries="2"]
            hook_finalize_point [shape = point, width = 0, peripheries="2" ]
            decision [label="Final \n Time?",shape="diamond" fixedsize=true width=2.0 height=1.0 labelcolor="#8699A3" style="filled"]
            hook_initialize [peripheries="0" label="HOOK_INITIALIZE", shape="cds", color="#DA5961", fontcolor="#DA5961", style=""
                URL="../06_solver_hooks.html#alfasim_sdk.hook_specs.initialize", target="_top"
            ]
            hook_finalize [peripheries="0" label="HOOK_FINALIZE", shape="cds", color="#DA5961",  fontcolor="#DA5961" , style=""
                URL="../06_solver_hooks.html#alfasim_sdk.hook_specs.finalize", target="_top"
            ]
            hyd_solver [label="Hydrodynamic Solver" URL="../07_workflow.html#hydrodynamic-solver", target="_top"]
            tracer_solver [label="Tracer Solver" URL="../07_workflow.html#tracer-solver", target="_top"]
            output [label="Output Variables"]

            {rank = same; hook_initialize_point; hook_initialize}
            {rank = same; hook_finalize_point; hook_finalize; }

            init -> config;
            config -> hook_initialize_point [arrowhead= none];

            hook_initialize_point -> solver [arrowhead=none];
            hook_initialize_point -> hook_initialize [style=dotted, color="#DA5961"];
            subgraph cluster_a{
                label="Transient Solver"
                style="dashed, rounded"
                shape="reactangular"
                color="#8699A3"
                fontcolor="#2c3e50"
                labeljust="l"

                {rank=same; time;tracer_solver}
                {rank=same; solver;hyd_solver}
                solver -> time;
                time:ne -> hyd_solver:w [style=dashed];

                hyd_solver -> tracer_solver [weight=999];
                tracer_solver -> output [weight=999];

                node[group=x]
                time;decision

                node[group=a]
                hyd_solver;tracer_solver;output

                output:nw -> time:se [style=dashed];
                time:s -> decision:n [weight=999];
                decision:w -> time:sw [label="No", weight=99];
            }
            decision -> hook_finalize_point [arrowhead= none, label="Yes"];
            hook_finalize_point ->  hook_finalize [style=dotted, color="#DA5961"];
            hook_finalize_point ->  end;

        }
