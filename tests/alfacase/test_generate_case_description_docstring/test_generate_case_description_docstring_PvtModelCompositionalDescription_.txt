.. rubric:: Definitions

.. tab:: CaseDescription

    .. parsed-literal::

        class PvtModelCompositionalDescription
            equation_of_state_type: \ :class:`EquationOfStateType <alfasim_sdk._internal.constants.EquationOfStateType>`\  = EquationOfStateType.PengRobinson
            surface_tension_model_type: \ :class:`SurfaceTensionType <alfasim_sdk._internal.constants.SurfaceTensionType>`\  = SurfaceTensionType.Weinaugkatz
            viscosity_model: \ :class:`PVTCompositionalViscosityModel <alfasim_sdk._internal.constants.PVTCompositionalViscosityModel>`\  = PVTCompositionalViscosityModel.CorrespondingStatesPrinciple
            heavy_components: \ :class:`List <typing.List>`\[\ :class:`HeavyComponentDescription <HeavyComponentDescription>`\] = []
            light_components: \ :class:`List <typing.List>`\[\ :class:`LightComponentDescription <LightComponentDescription>`\] = []
            fluids: \ :class:`Dict <typing.Dict>`\[str, \ :class:`CompositionalFluidDescription <CompositionalFluidDescription>`\] = {}

.. tab:: Schema

    .. parsed-literal::

            equation_of_state_type: \ :class:`EquationOfStateType <alfasim_sdk._internal.constants.EquationOfStateType>`\  # optional
            surface_tension_model_type: \ :class:`SurfaceTensionType <alfasim_sdk._internal.constants.SurfaceTensionType>`\  # optional
            viscosity_model: \ :class:`PVTCompositionalViscosityModel <alfasim_sdk._internal.constants.PVTCompositionalViscosityModel>`\  # optional
            heavy_components:  # optional
                - \ :class:`heavy_component_description_schema <HeavyComponentDescription>`
            light_components:  # optional
                - \ :class:`light_component_description_schema <LightComponentDescription>`
            fluids:  # optional
                string: \ :class:`compositional_fluid_description_schema <CompositionalFluidDescription>`
