.. rubric:: Definitions

.. tab:: CaseDescription

    .. parsed-literal::

        class ValveEquipmentDescription
            position: \ :class:`Scalar <barril.units.Scalar>`\ |space|
            type: \ :class:`ValveType <_alfasim_sdk.constants.ValveType>`\  = ValveType.PerkinsValve
            diameter: \ :class:`Scalar <barril.units.Scalar>`\  = Scalar(0.01, 'm', 'length')
            flow_direction: \ :class:`FlowDirection <_alfasim_sdk.constants.FlowDirection>`\  = FlowDirection.Forward
            opening_type: \ :class:`ValveOpeningType <_alfasim_sdk.constants.ValveOpeningType>`\  = ValveOpeningType.ConstantOpening
            opening: \ :class:`Scalar <barril.units.Scalar>`\  = Scalar(100.0, '%', 'dimensionless')
            opening_curve_interpolation_type: \ :class:`InterpolationType <_alfasim_sdk.constants.InterpolationType>`\  = InterpolationType.Constant
            opening_curve: \ :class:`OpeningCurveDescription <OpeningCurveDescription>`\  = OpeningCurveDescription()
            cv_table: \ :class:`CvTableDescription <CvTableDescription>`\  = CvTableDescription()

.. tab:: Schema

    .. parsed-literal::

            position: 
                value: number
                unit: string
            type: \ :class:`ValveType <_alfasim_sdk.constants.ValveType>`\  # optional
            diameter: 
                value: number
                unit: string # optional
            flow_direction: \ :class:`FlowDirection <_alfasim_sdk.constants.FlowDirection>`\  # optional
            opening_type: \ :class:`ValveOpeningType <_alfasim_sdk.constants.ValveOpeningType>`\  # optional
            opening: 
                value: number
                unit: string # optional
            opening_curve_interpolation_type: \ :class:`InterpolationType <_alfasim_sdk.constants.InterpolationType>`\  # optional
            opening_curve: \ :class:`opening_curve_description_schema <OpeningCurveDescription>`\  # optional
            cv_table: \ :class:`cv_table_description_schema <CvTableDescription>`\  # optional
