.. rubric:: Definitions

.. tab:: CaseDescription

    .. parsed-literal::

        class MaterialDescription
            name: str
            material_type: \ :class:`MaterialType <alfasim_sdk._internal.constants.MaterialType>` = MaterialType.Solid
            density: \ :class:`Scalar <barril.units.Scalar>` = Scalar(1.0, 'kg/m3', 'density')
            thermal_conductivity: \ :class:`Scalar <barril.units.Scalar>` = Scalar(0.0, 'W/m.degC', 'thermal conductivity')
            heat_capacity: \ :class:`Scalar <barril.units.Scalar>` = Scalar(0.0, 'J/kg.degC', 'specific heat capacity')
            inner_emissivity: \ :class:`Scalar <barril.units.Scalar>` = Scalar(0.0, '-', 'emissivity')
            outer_emissivity: \ :class:`Scalar <barril.units.Scalar>` = Scalar(0.0, '-', 'emissivity')
            expansion: \ :class:`Scalar <barril.units.Scalar>` = Scalar(0.0, '1/K', 'volumetric thermal expansion')
            viscosity: \ :class:`Scalar <barril.units.Scalar>` = Scalar(0.0, 'cP', 'dynamic viscosity')

.. tab:: Schema

    .. parsed-literal::

            name: string
            material_type: \ :class:`MaterialType <alfasim_sdk._internal.constants.MaterialType>` # optional
            density: # optional
                value: number
                unit: string
            thermal_conductivity: # optional
                value: number
                unit: string
            heat_capacity: # optional
                value: number
                unit: string
            inner_emissivity: # optional
                value: number
                unit: string
            outer_emissivity: # optional
                value: number
                unit: string
            expansion: # optional
                value: number
                unit: string
            viscosity: # optional
                value: number
                unit: string
